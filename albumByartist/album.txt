//api-----------------------------

func GetAlbums(c *gin.Context) {
	var albums []model.Album
	var err error
	nomeArtista := c.Query("nome")
	cognomeArtista := c.Query("cognome")
	if nomeArtista != "" && cognomeArtista != "" {
		if albums, err = datasource.AlbumsByArtist(datasource.DB, nomeArtista, cognomeArtista); err != nil {
			c.IndentedJSON(http.StatusNotFound, err)
		}
	} else if nomeArtista != "" && cognomeArtista == "" {
		if albums, err = datasource.AlbumsByArtistNome(datasource.DB, nomeArtista); err != nil {
			c.IndentedJSON(http.StatusNotFound, err)
		}
	} else if nomeArtista == "" && cognomeArtista != "" {
		if albums, err = datasource.AlbumsByArtistCognome(datasource.DB, cognomeArtista); err != nil {
			c.IndentedJSON(http.StatusNotFound, err)
		}
	}
	c.IndentedJSON(http.StatusOK, albums)
}

//datasource----------------------------
func AlbumsByArtist(db *gorm.DB, nome string, cognome string) ([]model.Album, error) {
	var albums []model.Album
	var artisti []model.Artista
	var idArtisti []int
	if err := db.Where("nome = ? AND cognome =?", nome, cognome).Find(&artisti).Error; err != nil {
		return nil, err
	}
	for _, v := range artisti {
		idArtisti = append(idArtisti, v.ID)
	}
	if err := db.Where("artista_id IN ?", idArtisti).Find(&albums).Error; err != nil {
		return nil, err
	}
	return albums, nil
}

func AlbumsByArtistNome(db *gorm.DB, nome string) ([]model.Album, error) {
	var albums []model.Album
	var artisti []model.Artista
	var idArtisti []int
	if err := db.Where("nome = ?", nome).Find(&artisti).Error; err != nil {
		return nil, err
	}
	for _, v := range artisti {
		idArtisti = append(idArtisti, v.ID)
	}
	if err := db.Where("artista_id IN ?", idArtisti).Find(&albums).Error; err != nil {
		return nil, err
	}
	return albums, nil
}

func AlbumsByArtistCognome(db *gorm.DB, cognome string) ([]model.Album, error) {
	var albums []model.Album
	var artisti []model.Artista
	var idArtisti []int
	if err := db.Where("cognome =?", cognome).Find(&artisti).Error; err != nil {
		return nil, err
	}
	for _, v := range artisti {
		idArtisti = append(idArtisti, v.ID)
	}
	if err := db.Where("artista_id IN ?", idArtisti).Find(&albums).Error; err != nil {
		return nil, err
	}
	return albums, nil
}
